/*
 * Universidad Nacional de Colombia - Sede Bogotá *
 *
 *      David Montaño - damontanofe@unal.edu.co
 *      Laura Moreno - lvmorenoc@unal.edu.co
 *      Christian Rodriguez - carodriguezb@unal.edu.co
 *
 * Código liberado bajo licencia Creative Commons 3.0
 * http://creativecommons.org/licenses/by-nc-sa/3.0/
 */

package org.cripto.cipher.publickey;

import org.cripto.cipher.publickey.RSACipher;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import static org.junit.Assert.*;

/**
 *
 * @author damontanofe,lvmorenoc,carodriguezb
 */
public class RSACipherTest {

    public RSACipherTest() {
    }

    @BeforeClass
    public static void setUpClass() throws Exception {
    }

    @AfterClass
    public static void tearDownClass() throws Exception {
    }

    @Before
    public void setUp() {
    }

    @After
    public void tearDown() {
    }

    /**
     * Test of encryptBR method, of class RSACipher.
     */
    @Test
    public void testEncrypt() throws Exception {
        System.out.println("encrypt");
        String sp = "211";
        String sq = "353";
        String se = "65537";
        String plainText = "withaheavyheartiaccompaniedmyfriendwestartedaboutfouroclocklegrandjupiterthedogandmyselfjupiterhadwithhimthescytheandspadesthewholeofwhichheinsisteduponcarryingmorethroughfearitseemedtomeoftrustingeitheroftheimplementswithinreachofhismasterthanfromanyexcessofindustryorcomplaisancehisdemeanorwasdoggedintheextremeanddatdeucedbugwerethesolewordswhichescapedhislipsduringthejourneyformyownpartihadchargeofacoupleofdarklanternswhilelegrandcontentedhimselfwiththescarabaeuswhichhecarriedattachedtotheendofabitofwhipcordtwirlingittoandfrowiththeairofaconjurorashewent";
        String expResult = "0143909071740924557663651673064614000810368084325010294592692543428180188560352035346659394165729897137686407834081161787326216178673350250710609244924793421380044465441226514734721376867306376311446304446168496709910100544122651473472043042339501439090717175122399673064093350036673065926962992018490071734020673066214813906400753173871751669616730614680202693402064078477141405356433568322793170290715982597509071673352760619857455760352063820383956230862207148374007548820455583402014680617695735267306673354882067306112442771965028353466382001439090711468025975368083675348189047440341534020671900907159269248591483759269422982880541657567324434004446688221583148757197901483727719723536188924279672160474400717623085926953252069897110717487617693158857222673062204815831650284557604446292490493359200150684538727606347562597509071416571390627167532526299262148148236730640933184016407871751005570417171107005781468030567673060065100578264771885653252168496516517894461400081052745458205274569062400751358443250477145586953266292491368415559572226719042834621482625571713479342138004446432505722235346734720440011244670991010001439090710907141657564332138021316592001027871751669616730656433568322543429249597903680867306622073401667306353463763113584724512099431738717516987053252622070143941294146800245059790002290444624859651655735215175673067235367335135844325028350005785325267307673063475657222";
        String result = RSACipher.encrypt(sp, sq, se, plainText);
        if (!result.equals(expResult)) {
            fail("The Obtained Result " + result + " doesn´t match the Expected Result " +
                    expResult);
        }
    }

    /**
     * Test of decryptBR method, of class RSACipher.
     */
    @Test
    public void testDecrypt() throws Exception {
        System.out.println("decrypt");
        String sp = "211";
        String sq = "353";
        String sd = "19073";
        String cipherText = "0143909071740924557663651673064614000810368084325010294592692543428180188560352035346659394165729897137686407834081161787326216178673350250710609244924793421380044465441226514734721376867306376311446304446168496709910100544122651473472043042339501439090717175122399673064093350036673065926962992018490071734020673066214813906400753173871751669616730614680202693402064078477141405356433568322793170290715982597509071673352760619857455760352063820383956230862207148374007548820455583402014680617695735267306673354882067306112442771965028353466382001439090711468025975368083675348189047440341534020671900907159269248591483759269422982880541657567324434004446688221583148757197901483727719723536188924279672160474400717623085926953252069897110717487617693158857222673062204815831650284557604446292490493359200150684538727606347562597509071416571390627167532526299262148148236730640933184016407871751005570417171107005781468030567673060065100578264771885653252168496516517894461400081052745458205274569062400751358443250477145586953266292491368415559572226719042834621482625571713479342138004446432505722235346734720440011244670991010001439090710907141657564332138021316592001027871751669616730656433568322543429249597903680867306622073401667306353463763113584724512099431738717516987053252622070143941294146800245059790002290444624859651655735215175673067235367335135844325028350005785325267307673063475657222";
        String expResult = "withaheavyheartiaccompaniedmyfriendwestartedaboutfouroclocklegrandjupiterthedogandmyselfjupiterhadwithhimthescytheandspadesthewholeofwhichheinsisteduponcarryingmorethroughfearitseemedtomeoftrustingeitheroftheimplementswithinreachofhismasterthanfromanyexcessofindustryorcomplaisancehisdemeanorwasdoggedintheextremeanddatdeucedbugwerethesolewordswhichescapedhislipsduringthejourneyformyownpartihadchargeofacoupleofdarklanternswhilelegrandcontentedhimselfwiththescarabaeuswhichhecarriedattachedtotheendofabitofwhipcordtwirlingittoandfrowiththeairofaconjurorashewent";
        String result = RSACipher.decrypt(sp, sq, sd, cipherText);
        if (!result.equals(expResult)) {
            fail("The Obtained Result " + result + " doesn´t match the Expected Result " +
                    expResult);
        }
    }
}